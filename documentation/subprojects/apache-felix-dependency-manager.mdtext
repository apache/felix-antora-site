translation_pending: true
Title: Apache Felix Dependency Manager

## Introduction

In a service oriented architecture, applications are built out of components that are packaged in bundles and interact through services.

These components, that both publish services and depend on other services, form networks that are often dynamic in nature. That makes managing these dependencies something the developer needs to take into account.

Whilst the OSGi framework provides the low-level building blocks to do that in the form of service listeners and trackers, these should not be used directly by developers. Instead, a more declarative approach works best, and the Dependency Manager provides this in the form of a declarative API that allows you to dynamically declare and change dependencies.

On top of that, a set of OSGi design patterns are defined that can be used as building blocks for more complex applications.

## Table of Contents

* [Background]({{ refs.apache-felix-dependency-manager-background.path }}) explains the problem being solved and the main design goals.
* [Getting Started]({{ refs.apache-felix-dependency-manager-getting-started.path }}) helps you with the basic concepts by example.
* [Migrating from Earlier Versions]({{ refs.apache-felix-dependency-manager-migrating-from-earlier-versions.path }}) explains the differences and migration options.
* [OSGi Design Patterns]({{ refs.apache-felix-dependency-manager-osgi-design-patterns.path }}) explains the more advanced design patterns available.
* [Reference Guide]({{ refs.apache-felix-dependency-manager-reference-guide.path }}) a full reference guide to lookup all implementation details.
* [Using Annotations]({{ refs.apache-felix-dependency-manager-using-annotations.path }}) for declaring your service components using DependencyManager annotations.
* [Building Dependency Manager]({{ refs.apache-felix-dependency-manager-how-to-build.path }}) explains how to build Dependency Manager bundles from trunk.
* [External articles and resources]({{ refs.apache-felix-dependency-manager-resources.path }}) regroups external articles and useful links.
