translation_pending: true
Title: Dependency Manager Annotations
Excerpt: Using the Apache Felix Dependency Manager Annotations

Dependency Manager provides a compact and versatile java API, allowing to declaratively and 
programmatically register, acquire, and  manage dynamic OSGi services. But since recently, 
support for  annotations has been introduced in Dependency Manager, and you can also 
manage your service component dependencies using Java 5 annotations. 
In this chapter, we will detail the Dependency Manager annotations which  can be used to 
describe service components. We will also discuss the DM  component lifecycle and how 
components can interact with the dynamic OSGi service model.

# Table of Contents

* [{{ refs.dependencymanager-annotations-quickstart.headers.excerpt }}]({{ refs.dependencymanager-annotations-quickstart.path }})
* [{{ refs.dependencymanager-annotations-spellchecker.headers.excerpt }}]({{ refs.dependencymanager-annotations-spellchecker.path }})
* [{{ refs.dependencymanager-annotations-component.headers.excerpt }}]({{ refs.dependencymanager-annotations-component.path }})
* [{{ refs.dependencymanager-annotations-dependencies.headers.excerpt }}]({{ refs.dependencymanager-annotations-dependencies.path }})
* [{{ refs.dependencymanager-annotations-lifecycle.headers.excerpt }}]({{ refs.dependencymanager-annotations-lifecycle.path }})
* [Composition]({{ refs.apache-felix-dependency-manager-using-annotations-composition.path }}) Explains how a component may be implemented using multiple object instances.
* [BndTools Tutorial](https://bitbucket.org/marrs/bndtools-dmdemo) A BndTools based demo of DependencyManager annotations.

